# nginx_citalis.lua application; nginx's FRiCKLE/ngx_postgres native driver; # nginx's redis2-nginx-module native driver;

location /citalis.orc {

	add_header Allow "GET, POST, HEAD" always; if ( $request_method !~ ^(GET|POST|HEAD)$ ) { return 405; }
	# The following two directives should take the same value so that nginx will always buffer the whole request body in memory
	client_body_buffer_size 128k; client_max_body_size 128k; content_by_lua_file nginx_citalis.lua;
	
}

#location /redis.get {
# -- a bit slower than the lua-resty-redis module --
#	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params;  
#	set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
#	redis2_query get $key; redis2_pass redis_citalis;
#	
#}

#location /redis.set {
# -- a bit slower than the lua-resty-redis module --
#	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params;  
#	set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
#  set_unescape_uri $val $arg_val;  # this requires ngx_set_misc
#  redis2_query set $key $val; redis2_pass redis_citalis;
#	
#}

location /citalis.auteurs {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis;
	postgres_query HEAD GET "SELECT DISTINCT auteur FROM citations ORDER BY auteur";
	
}

location /citalis.auteurs.random {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_output text;
	postgres_query HEAD GET "SELECT auteur FROM citations ORDER BY RANDOM() LIMIT 1";
	
}

location /citalis.concepts {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis;
	postgres_query HEAD GET "SELECT DISTINCT concept FROM citations ORDER BY concept";
	
}

location /citalis.concepts_lc {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_output text;
	postgres_query HEAD GET "SELECT DISTINCT concept FROM citations ORDER BY concept";
	
}

location /citalis.concepts.random {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_output text;
	postgres_query HEAD GET "SELECT concept FROM citations ORDER BY RANDOM() LIMIT 1";
	
}

location /citalis.dates {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis;
	postgres_query HEAD GET "SELECT DISTINCT date FROM citations WHERE date != '' ORDER BY date";
	
}

location /citalis.dates.random {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_output text;
	postgres_query HEAD GET "SELECT date FROM citations WHERE date != '' ORDER BY RANDOM() LIMIT 1";
	
}

location /citalis.citations {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $concept $arg_concept;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment FROM citations WHERE concept = '$arg_concept' ORDER BY auteur, titre";
	
}

location /citalis.citations.random.rds {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $concept $arg_concept;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment FROM citations WHERE concept = '$arg_concept' ORDER BY RANDOM() LIMIT 1";
	
}

location /citalis.citations.random.text {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $concept $arg_concept; postgres_output text;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment FROM citations WHERE concept = '$arg_concept' ORDER BY RANDOM() LIMIT 1";
	
}

location /citalis.citations.auteur {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $auteur $arg_auteur;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE auteur = '$arg_auteur' ORDER BY concept, titre";
	
}

location /citalis.citations.auteur.text {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $auteur $arg_auteur; postgres_output text;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE auteur = '$arg_auteur' ORDER BY concept, titre LIMIT 1";
	
}

location /citalis.citations.date {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $date $arg_date;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE date = '$arg_date' ORDER BY concept, titre";
	
}

location /citalis.citations.date.text {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $date $arg_date; postgres_output text;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE date = '$arg_date' ORDER BY concept, titre LIMIT 1";
	
}

location /citalis.citations.date.text.extract {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $date $arg_date; postgres_output text;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE date = '$arg_date' ORDER BY concept, titre";
	
}

location /citalis.citations.search {

	allow 127.0.0.1; deny all; include /etc/nginx/proxy_params; postgres_pass citalis; postgres_escape $search $arg_search;
	postgres_query HEAD GET "SELECT citation, auteur, titre, date, comment, concept FROM citations WHERE citation ILIKE '%$arg_search%' 
		OR auteur ILIKE '%$arg_search%' OR concept ILIKE '%$arg_search%' OR titre ILIKE '%$arg_search%' OR comment ILIKE '%$arg_search%' 
		OR date ILIKE '%$arg_search%' ORDER BY concept, titre";
	
}

# for complete list of nginx env vars, see /info
# -- print(resp.errcode); print(resp.errstr); print(resp.insert_id); print(resp.affected_rows)
